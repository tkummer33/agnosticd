- include_vars: osp.yml

- set_fact:
    heat_user_password_generated: "{{lookup('password', '/dev/null length=12 chars=ascii_letters,digits')}}"
    heat_master_template: "{{output_dir}}/{{ env_type }}.{{ guid }}.{{cloud_provider}}"
    heat_nested_template: "{{output_dir}}/{{ env_type }}.{{ guid }}.{{cloud_provider}}"

- set_fact:
    heat_user_password: "{{ heat_user_password_provided | default(heat_user_password_generated) }}"

- name: Generate Heat template
  template:
    src: "{{ cloud_infra_master_template_src }}"
    dest: "{{ heat_master_template }}_{{ item.name }}_cloud_master_template.yaml"
  tags:
    - osp_infrastructure_deployment
    - gen_heat_template
  loop: "{{ stacks }}"
# TODO: be able to generate an unknown number of templates that lives in the config
# => osp_*.j2
- name: Generate nested Heat template
  template:
    src: "{{ cloud_infra_nested_template_src }}"
    dest: "{{ heat_nested_template }}_{{item.name}}_cloud_nested_template.yaml"
  tags:
    - osp_infrastructure_deployment
    - gen_heat_template
  when: >-
    stat_default_nested_template.stat.exists
    or stat_nested_template.stat.exists
  loop: "{{ stacks }}"
- name: Stop if debugging template
  fail:
    msg: "Check template here: {{ heat_template }}"
  when: debug_template|d(false)|bool

- name: get fileglob
  debug:
    msg: "{{ lookup('fileglob', '{{heat_master_template}}*master_template.yaml', wantlist=True) }}"
  register: fileglob_master

- name: get fileglob
  debug:
    msg: "{{ lookup('fileglob', '{{heat_master_template}}*nested_template.yaml', wantlist=True) }}"
  register: fileglob_nested


- name: Validate Heat master template
  assert:
    that: >
      lookup('file', '{{ item }}') | from_yaml is succeeded
      or lookup('file', '{{ item }}') | from_json is succeeded
    success_msg: Heat template is syntactically valid
  loop: "{{ fileglob_master.msg }}"

- name: Validate Heat nested template
  assert:
    that: >
      lookup('file', '{{ item }}') | from_yaml is succeeded
      or lookup('file', '{{ item }}') | from_json is succeeded
    success_msg: Heat template is syntactically valid
  when: >-
    stat_default_nested_template.stat.exists
    or stat_nested_template.stat.exists
  loop: "{{ fileglob_nested.msg }}"

#- name: validate Heat template with dry run
#  environment:
#    OS_AUTH_URL: "{{ osp_auth_url }}"
#    OS_USERNAME: "{{ osp_auth_username }}"
#    OS_PASSWORD: "{{ osp_auth_password }}"
#    OS_PROJECT_NAME: "{{ osp_project_name }}"
#    OS_PROJECT_DOMAIN_ID: "{{ osp_auth_project_domain }}"
#    OS_USER_DOMAIN_NAME: "{{ osp_auth_user_domain }}"
#  command: >-
#    openstack stack create --dry-run -vvv
#    -t {{ item }} -f json base-stack-{{ guid }}-{{ 99999| random }}
#  changed_when: false
#  register: heat_validation
#  until: heat_validation is succeeded
#  retries: "{{ heat_retries }}"
#  delay: 20
#  tags:
#    - osp_infrastructure_deployment
#    - validate_heat_template
#  loop: "{{ fileglob_master.msg }}"
######################### Launch Template
